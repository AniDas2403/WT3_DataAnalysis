})
mean(Out <= 0)
set.seed(29, sample.kind = "Rounding")
Out <- replicate(B, {
p_to_use <- sample(seq(-0.01, 0.01, length = 100), 1)
outcomes <- sample (c(pay,x), replace=TRUE, n, prob=c(p_to_use, 1-p_to_use))
S <- sum(outcomes)
S
})
Out
mean(Out <= 0)
mean(Out <= -1000000)
Out <- replicate(B, {
p_to_use <- sample(seq(-0.01, 0.01, length = 100), 1)
outcomes <- sample (c(pay,x), replace=TRUE, n, prob=c(p_to_use, 1-p_to_use))
S <- sum(outcomes)
S
})
mean(Out <= 0)
Out <- replicate(B, {
p_to_use <- 0.04 + sample(seq(-0.01, 0.01, length = 100), 1)
outcomes <- sample (c(pay,x), replace=TRUE, n, prob=c(p_to_use, 1-p_to_use))
S <- sum(outcomes)
S
})
mean(Out <= 0)
Out <- replicate(B, {
p_to_use <- 0.015 + sample(seq(-0.01, 0.01, length = 100), 1)
outcomes <- sample (c(pay,x), replace=TRUE, n, prob=c(p_to_use, 1-p_to_use))
S <- sum(outcomes)
S
})
mean(Out <= 0)
mean(Out <= -1000000)
mean(Out)
mean(Out < -1e6)
set.seed <- (29, sample.kind = "Rounding")
set.seed(29, sample.kind = "Rounding")
Out <- replicate(B, {
p_to_use <- 0.015 + sample(seq(-0.01, 0.01, length = 100), 1)
outcomes <- sample (c(pay,x), replace=TRUE, n, prob=c(p_to_use, 1-p_to_use))
S <- sum(outcomes)
S
})
mean(Out)
mean(Out <= 0)
mean(Out <= -1000000)
EV_tn <- ((pay*p[1]) + (cost*(1-p[1]))) * n
SE_tn <- sqrt(n) * (cost - pay) * sqrt(p[1]*(1-p[1]))
pnorm(0, EV_tn, SE_tn)
EV_tn <- ((pay*p[2]) + (cost*(1-p[2]))) * n
SE_tn <- sqrt(n) * (cost - pay) * sqrt(p[2]*(1-p[2]))
pnorm(0, EV_tn, SE_tn)
p[2]
library(dslabs)
data(heights)
head(heights)
sum(ifelse(heights$sex == "Female", 1, 2))
mean(ifelse(heights$height > 72, heights$height, 0))
sum(hights$height < 60)
sum(heights$height < 60)
library (dplyr)
library (tidyverse)
N <- c(25, 50, 1000, 10000, 100000, 1000000, 100000000)
p <- (0.24, 0.35, 0.12, 0.64, 0.26, 0.56, 0.03)
p <- c(0.24, 0.35, 0.12, 0.64, 0.26, 0.56, 0.03)
M <- (70, 140, 3000, 60000, 400000, 2000000, 500000000)
M <- c(70, 140, 3000, 60000, 400000, 2000000, 500000000)
for i in 1:7
{
sel <- replicate(N[i], {
S <- sample(c(1,0), replace=TRUE, M[i], prob = c(p[1], 1-p[1]))
sum(S)
})
}
for i in 1:7{
sel <- replicate(N[i], {
S <- sample(c(1,0), replace=TRUE, M[i], prob = c(p[1], 1-p[1]))
sum(S)
})
}
for (i in 1:7){
sel <- replicate(N[i], {
S <- sample(c(1,0), replace=TRUE, M[i], prob = c(p[1], 1-p[1]))
sum(S)
})
}
for (i in 1:5){
sel <- replicate(N[1], {
S <- sample(c(1,0), replace=TRUE, M[i], prob = c(p[1], 1-p[1]))
sum(S)
})
}
sel
hist(sel)
for (i in 1:5){
sel <- replicate(N[i], {
S <- sample(c(1,0), replace=TRUE, M[i], prob = c(p[1], 1-p[1]))
sum(S)
})
}
install.packages("readxl")
library("readxl")
head(DS)
DS <- read.csv('DS.csv')
head(DS)
DS <- read.csv("F:/Desk/HackFrostNL_2021/DS/DS.csv")
View(DS)
head(DS)
str(DS)
DS_Age <- DS %>% filter(Group == "By Age")
library(tidyverse)
DS_Age <- DS %>% filter(Group == "By Age")
DS_Gender <- DS %>% filter(Group == "By Gender")
str(DS_Age)
View(DS_Age)
DS_Age_AD <- DS_Age %>% filter(Indicator == "Symptoms of Anxiety Disorder")
View(DS_Age_AD)
View(DS_Age_AD)
DS_Age_AD %>% ggplot(aes(Value, Time.Period.Label, colour = Subgroup))
DS_Age_AD %>% ggplot(aes(Value, Time.Period.Label, colour = Subgroup)) + geom_line()
DS_Age_AD %>% ggplot(aes(Time.Period.Label, value, colour = Subgroup)) + geom_line()
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup)) + geom_line()
DS_Age_AD_plot <- DS_Age_AD %>% !is.na(Value)
DS_Age_AD_plot <- DS_Age_AD %>% !is.na(DS_Age_AD$Value)
DS_Age_AD_plot <- DS_Age_AD %>% !is.na(Value)
DS_Age_AD_plot <- DS_Age_AD %>% na.rm()
DS_Age_AD_plot <- DS_Age_AD %>% na.rm = TRUE
DS_Age_AD_18_23 <- DS_Age_AD %>% filter(Subgroup == "18 - 29 years")
View(DS_Age_AD_18_23)
View(DS_Age_AD_18_23)
DS_Age_AD_18_23 %>% ggplot(aes(Time.Period.Label, Value)) + geom_line()
DS_Age_AD_18_23 %>% ggplot(aes(Time.Period.Label, Value, group = 1)) + geom_line()
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_line()
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point()
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_line() + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point() + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point() +  theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_bar() +  theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = subgroup, group = 1)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point(stat='identity') +  theme(axis.text.x = element_text(angle = 90, hjust = 1))
library("readxl")
DS1 <- read_excel("Trial.xlsx")
DS1 <- read_excel("Trial.xlsx")
DS1 <- read_excel("F:\Desk\HackFrostNL_2021\DS\NG.xlsx")
DS1 <- read_excel("F:/Desk/HackFrostNL_2021/DS/NG.xlsx")
View(DS1)
View(DS1)
DS1 <- read_excel("F:\Desk\HackFrostNL_2021\DS\Trial.xlsx")
DS1 <- read_excel("F:/Desk/HackFrostNL_2021/DS/Trial.xlsx")
View(DS1)
View(DS1)
GN <- DS1
View(GN)
View(GN)
NG_Reg <- GN %>% filter(Graduates == "Registered nurse")
View(NG_Reg)
View(NG_Reg)
regions <- c("Nefoundland and Labrador", "Prince Edward Island", "Nova Scotia", "New Brunswick", "Quebec", "Ontario", "Manitoba", "Saskatchewan", "Alberta", "British Column")
NG_Reg_1 <- NG_Reg %>% select(Graduates, Year, Nefoundland and Labrador, Prince Edward Island, Nova Scotia, New Brunswick, Quebec, Ontario, Manitoba, Saskatchewan, Alberta, British Columbia)
NG_Reg_1 <- NG_Reg %>% select(Graduates, Year, Newfoundland and Labrador, Prince Edward Island, Nova Scotia, New Brunswick, Quebec, Ontario, Manitoba, Saskatchewan, Alberta, British Columbia)
NG_Reg_1 <- NG_Reg %>% select(Graduates, Year, Newfoundland and Labrador, Prince Edward Island, Nova Scotia, New Brunswick, Quebec, Ontario, Manitoba, Saskatchewan, Alberta, British Columbia)
View(NG_Reg)
View(NG_Reg)
NG_Reg_1 <- subset(NG_Reg, select = -c(Yukon, Northwest Territories, Nunavut))
regions <- c("Newfoundland and Labrador", "Prince Edward Island", "Nova Scotia", "New Brunswick", "Quebec", "Ontario", "Manitoba", "Saskatchewan", "Alberta", "British Column")
NG_Reg_1 <- NG_Reg[regions]
regions <- c("Newfoundland and Labrador", "Prince Edward Island", "Nova Scotia", "New Brunswick", "Quebec", "Ontario", "Manitoba", "Saskatchewan", "Alberta", "British Columbia")
NG_Reg_1 <- NG_Reg[regions]
View(NG_Reg_1)
View(NG_Reg_1)
headers <- c("Graduates", "Year", "Newfoundland and Labrador", "Prince Edward Island", "Nova Scotia", "New Brunswick", "Quebec", "Ontario", "Manitoba", "Saskatchewan", "Alberta", "British Columbia")
NG_Reg_1 <- NG_Reg[headers]
View(NG_Reg_1)
View(NG_Reg_1)
NG_Reg_1 %>% ggplot(aes(Year, Newfoundland and Labrador) color = red)) + geom_line()
names(NG_Reg_1)
NG_Reg_1 %>% ggplot(aes(Year, Newfoundland and Labrador) color = red)) + geom_line()
NG_Reg_1 %>% ggplot(aes('Year', 'Newfoundland and Labrador') color = red)) + geom_line()
NG_Reg_1 %>% ggplot(aes('Year', 'Newfoundland and Labrador')) + geom_line(color = red)
NG_Reg_1 %>% ggplot(aes('Year', 'Newfoundland and Labrador')) + geom_line(color = "red")
NG_Reg_1 %>% ggplot(aes(Year, Newfoundland and Labrador)) + geom_line(color = "red")
NG_E <- read_excel("F:/Desk/HackFrostNL_2021/DS/Trial.xlsx")
View(NG_E)
View(NG_E)
NG_E_1 <- NG_E %>% filter(Graduates == "Registered nurse")
View(NG_E_1)
View(NG_E_1)
NG_E_1 %>% ggplot(aes(Year, NL)) + geom_line(col= "red")
NG_E_1 %>% ggplot(aes(Year, NL, group=1)) + geom_line(col= "red")
NG_E_1 %>% ggplot(aes(Year, PE, group=1)) + geom_line(col= "blue")
NG_E_1 %>% ggplot(aes(Year, NS, group=1)) + geom_line(col= "green")
NG_E_1 %>% ggplot(aes(Year, NB, group=1)) + geom_line(col= "violet")
NG_E_1 %>% ggplot(aes(Year, QC, group=1)) + geom_line(col= "indigo")
NG_E_1 %>% ggplot(aes(Year, QC, group=1)) + geom_line(col= "orange")
NG_E_1 %>% ggplot(aes(Year, ON, group=1)) + geom_line(col= "pink")
NG_E_1 %>% ggplot(aes(Year, ON, group=1)) + geom_line()
NG_E_1 %>% ggplot(aes(Year, ON, group=1)) + geom_line(col= "purple")
NG_E_1 %>% ggplot(aes(Year, MB, group=1)) + geom_line(col= "purple")
NG_E_1 %>% ggplot(aes(Year, SK, group=1)) + geom_line(col= "dark green")
NG_E_1 %>% ggplot(aes(Year, SK, group=1)) + geom_line(col= "dark blue")
NG_E_1 %>% ggplot(aes(Year, AB, group=1)) + geom_line(col= "dark blue")
NG_E_1 %>% ggplot(aes(Year, BC, group=1)) + geom_line(col= "brown")
NG_E_1 %>% ggplot(aes(Year, BC, group=1)) + geom_line(col= "brown") + geom_point()
HCP <- read_excel("F:/Desk/HackFrostNL_2021/DS/HCP.xlsx")
View(HCP)
View(HCP)
HCP <- read_excel("F:/Desk/HackFrostNL_2021/DS/HCP.xlsx")
View(HCP)
View(HCP)
i <- c(3,4,5,21,26)
HCP_E <- HCP[i]
View(HCP_E)
View(HCP_E)
HCP_E <- HCP %>% filter((Type of Provider == "Dental assistants") & (Type of Provider == "Dental hygienists") & (Type of Provider == "Dentists") & (Type of Provider == "Regulated nurses") & (Type of Provider == "Physicians"))
View(DS_Age)
View(DS_Age)
View(DS_Age_AD)
View(DS_Age_AD)
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(DS_Age_AD)
View(DS_Age_AD)
DS_Age_DD <- DS_Age %>% filter(Indicator == "Symptoms of Depressive Disorder")
View(DS_Age_AD)
View(DS_Age_AD)
DS_Age_DD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(DS_Age_DD)
View(DS_Age_DD)
DS_Age_ADorDD <- DS_Age %>% filter(Indicator == "Symptoms of Anxiety Disorder or Depressive Disorder")
DS_Age_ADorDD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(DS_Gender)
View(DS_Gender)
DS_Gender_DD <- DS_Gender %>% filter(Indicator == "Symptoms of Depressive Disorder")
View(DS_Gender_DD)
View(DS_Gender_DD)
DS_Gender_DD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + geom_line() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Gender_DD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Gender_AD <- DS_Gender %>% filter(Indicator == "Symptoms of Anxiety Disorder"
)
View(DS_Gender_AD)
View(DS_Gender_AD)
DS_Gender_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(DS_Gender_AD)
View(DS_Gender_AD)
DS_Gender_AD$Time.Period.Label <- as.factor(DS_Gender_AD$Time.Period.Label)
DS_Gender_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
str(DS_Gender_AD)
View(DS_Age_ADorDD)
View(DS_Age_ADorDD)
DS_Gender_ADorDD <- DS_Gender %>% filter(Indicator == "Symptoms of Anxiety Disorder or Depressive Disorder
"
)
View(DS_Gender_ADorDD)
View(DS_Gender_ADorDD)
DS_Gender_ADorDD <- DS_Gender %>% filter(Indicator == "Symptoms of Anxiety Disorder or Depressive Disorder")
View(DS_Gender_ADorDD)
View(DS_Gender_ADorDD)
DS_Gender_ADorDD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
RT <- read_csv("F:/Desk/HackFrostNL_2021/DS/reducedTotal.csv")
View(RT)
View(RT)
RT %>% ggplot(aes(Profession, Total Count, color = Profession)) + geom_bar(stat='identity')
RT <- read_csv("F:/Desk/HackFrostNL_2021/DS/reducedTotal.csv")
RT %>% ggplot(aes(Profession, Total, color = Profession)) + geom_bar(stat='identity')
View(DS_Gender_ADorDD)
View(DS_Gender_ADorDD)
DS_Gender_ADorDD$Time.Period.Label <- factor(DS_Gender_ADorDD$Time.Period.Label, ordered = T)
DS_Gender_ADorDD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
RT %>% ggplot(aes(Profession, Total, color = Profession)) + geom_bar(stat='identity')
RT %>% ggplot(aes(Profession, Total, color = Profession, fill = TRUE)) + geom_bar(stat='identity')
RT %>% ggplot(aes(Profession, Total, color = Profession, fill = Profession)) + geom_bar(stat='identity')
DS_Gender_ADorDD[order(as.Date(DS_Gender_ADorDD$Time.Period.Label, format="%d%m%Y")),]
View(DS_Gender_ADorDD)
View(DS_Gender_ADorDD)
DS_Gender_ADorDD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Gender_ADorDD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Gender_ADorDD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Gender_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Gender_AD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Gender_DD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Gender_DD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_DD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, shape = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Age_DD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_DD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Age_DD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_AD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Age_AD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
DS_Age_ADorDD %>% ggplot(aes(Time.Period.Label, Value, colour = Subgroup, group = 1)) + scale_x_discrete(limits=DS_Age_ADorDD$Time.Period.Label) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
options(digits = 3)
library(dslabs)
data(brexit_polls)
force(brexit_polls)
View(brexit_polls)
View(brexit_polls)
p <- 0.481
d <- (2*p)-1
N <- 1500
2*p
se_X_hat <- sqrt(p*(1-p)*N)
se_X_hat
2*se_X_hat
EV_S <- p*N
EV_S
SE_S <- sqrt(N*p*(1-p))
SE_S
se_X_hat <- sqrt(p*(1-p)*(1/N))
se_X_hat
2*se_X_hat
mean(brexit_polls$spread)
sd(brexit_polls$spread)
brexit_polls <- brexit_polls %>% mutate(X_hat = (spread+1)/2)
mean(brexit_polls$X_hat)
sd(brexit_polls$X_hat)
brexit_polls$X_hat[1]
brexit_polls$X_hat[1] - qnorm(0.975)*se_X_hat
brexit_polls$X_hat[1] + qnorm(0.975)*se_X_hat
brexit_polls$X_hat[1] - qnorm(0.975)*sqrt(brexit_polls$X_hat[1]*(1-brexit_polls$X_hat[1])*(1/N))
brexit_polls$X_hat[1] + qnorm(0.975)*sqrt(brexit_polls$X_hat[1]*(1-brexit_polls$X_hat[1])*(1/N))
N_1 <- brexit_polls$samplesize[1]
brexit_polls$X_hat[1] - qnorm(0.975)*sqrt(brexit_polls$X_hat[1]*(1-brexit_polls$X_hat[1])*(1/N_1))
brexit_polls$X_hat[1] + qnorm(0.975)*sqrt(brexit_polls$X_hat[1]*(1-brexit_polls$X_hat[1])*(1/N_1))
june_polls <- brexit_polls %>% filter(enddate >= "2016-06-01")
View(june_polls)
View(june_polls)
june_polls <- june_polls %>% mutate(se_x_hat = sqrt(X_hat*(1-X_hat)*(1/samplesize)))
june_polls <- june_polls %>% mutate(lower = X_hat - qnorm(0.975)*se_x_hat) %>% mutate(upper = X_hat + qnorm(0.975)*se_x_hat)
n()
str(june_polls)
length(june_polls$upper)
june_polls <- june_polls %>% mutate(se_spread = 2 * se_x_hat)
june_polls <- june_polls %>% mutate(lower = (2*X_hat - 1) - 2*qnorm(0.975)*se_x_hat) %>% mutate(upper = (2*X_hat - 1) + 2*qnorm(0.975)*se_x_hat)
june_polls <- june_polls %>% mutate(hit = ifelse((lower <= -0.038) & (-0.038 <= upper)))
june_polls <- june_polls %>% mutate(hit = ifelse(((lower <= -0.038) & (-0.038 <= upper)), TURE, FALSE))
june_polls <- june_polls %>% mutate(hit = ifelse(((lower <= -0.038) & (-0.038 <= upper)), TRUE, FALSE))
mean(hit)
mean(june_polls$hit)
mean(june_polls$lower > 0)
mean((june_polls$lower <= 0) & (0 <= june_polls$upper))
J <- june_polls %>% group_by(pollster) %>% summarize(hitrate = mean(hit), N = n()) %>% arrange(hitrate)
View(J)
View(J)
combined_by_type <- june_polls %>%
group_by(poll_type) %>%
summarize(N = sum(samplesize),
spread = sum(spread*samplesize)/N,
p_hat = (spread + 1)/2)
View(combined_by_type)
View(combined_by_type)
combined_by_type <- combined_by_type %>% mutate(lower = (2*p_hat - 1) - 2*qnorm(0.975)*sqrt(p_hat*(1-p_hat)*(1/N))) %>% mutate(lower = (2*p_hat - 1) + 2*qnorm(0.975)*sqrt(p_hat*(1-p_hat)*(1/N)))
View(combined_by_type)
View(combined_by_type)
combined_by_type <- combined_by_type %>% mutate(lower = (2*p_hat - 1) - 2*qnorm(0.975)*sqrt(p_hat*(1-p_hat)*(1/N))) %>% mutate(upper = (2*p_hat - 1) + 2*qnorm(0.975)*sqrt(p_hat*(1-p_hat)*(1/N)))
combined_by_type %>% boxplot()
combined_by_type <- combined_by_type %>% mutate(ci = upper - lower)
june_polls %>% group_by(poll_type) %>% boxplot()
brexit_hit <- brexit_polls %>%
mutate(p_hat = (spread + 1)/2,
se_spread = 2*sqrt(p_hat*(1-p_hat)/samplesize),
spread_lower = spread - qnorm(.975)*se_spread,
spread_upper = spread + qnorm(.975)*se_spread,
hit = spread_lower < -0.038 & spread_upper > -0.038) %>%
select(poll_type, hit)
View(brexit_hit)
View(brexit_hit)
i_Online <- brexit_hit %>% which(poll_type == "Online")
i_Online <- brexit_hit %>% which(poll_type = "Online")
i_O <- which(brexit_hit$poll_type == "Online")
i_T <- which(brexit_hit$poll_type == "Telephone")
BH_2by2 <- tibble(poll_type = c("Online", "Telephone"), hit_count = c(sum(hit[i_O] == TRUE), sum(hit[i_T] == TRUE)), total = c(length(i_O), length(i_T)))
BH_2by2 <- tibble(poll_type = c("Online", "Telephone"), hit_count = c(sum(brexit_polls$hit[i_O] == TRUE), sum(brexit_polls$hit[i_T] == TRUE)), total = c(length(i_O), length(i_T)))
View(BH_2by2)
View(BH_2by2)
sum(brexit_polls$hit[i_O] == TRUE
)
sum(brexit_polls$hit[i_O])
brexit_polls$hit[i_O]
brexit_hit$hit[i_O]
BH_2by2 <- tibble(poll_type = c("Online", "Telephone"), hit_count = c(sum(brexit_hit$hit[i_O] == TRUE), sum(brexit_hit$hit[i_T] == TRUE)), total = c(length(i_O), length(i_T)))
c_test <- BH_2by2 %>% select(-poll_type) %>% chisq.test()
View(c_test)
View(c_test)
c_test$p.value
(48/85)/((85-48)/85)
(10/42)/(32/42)
1.3/0.312
0.312/1.3
0.312/1.3
1.3/0.312
((48/85)/((85-48)/85)) / ((10/42)/(32/42))
brexit_polls %>% ggplot(aes(enddate, spread, color = poll_type)) + geom_point() + geom_line() + geom_smooth(loess)
brexit_polls %>% ggplot(aes(enddate, spread, color = poll_type)) + geom_point() + geom_smooth(loess)
brexit_polls %>% ggplot(aes(enddate, spread, color = poll_type)) + geom_point() + geom_smooth() + loess(span = 0.4)
brexit_long <- brexit_polls %>%
gather(vote, proportion, "remain":"undecided") %>%
mutate(vote = factor(vote))
View(brexit_long)
View(brexit_long)
brexit_long %>% ggplot(aes(enddate, proportion, color=vote)) + geom_smooth() + loess(span=0.3)
brexit_long %>% ggplot(aes(enddate, proportion, color=vote)) + geom_smooth()
brexit_long %>% ggplot(aes(enddate, proportion, color=vote)) + geom_smooth() + loess(y ~ x, data=data, span=0.3)
brexit_long %>% ggplot(aes(enddate, proportion, color=vote)) + geom_smooth() + loess(y ~ x, data=brexit_long, span=0.3)
brexit_long %>% ggplot(aes(enddate, proportion, color=vote)) + geom_smooth() + loess(proportion ~ enddate, data=brexit_long, span=0.3)
library(tidyverse)
library(gutenbergr)
install.packages('gutenbergr')
library(gutenbergr)
library(tidytext)
install.packages('tidytext')
library(tidytext)
options(digits=3)
gutenberg_metadata
i <- str_detect(gutenberg_metadata$title, "Pride and Prejudice")
length(i)
i <- str_detect(gutenberg_metadata$title, "Pride and Prejudice")
i
GM_PaP <- gutenberg_metadata %>% filter(title == "Pride and Prejudice")
View(GM_PaP)
View(GM_PaP)
i <- str_detect(gutenberg_metadata$title, "Pride and Prejudice")
sum(i)
gutenberg_works(title == "Pride and Prejudice")
i <- str_detect(gutenberg_metadata$title, "Pride and Prejudice")
sum(i, na.rm=TRUE)
PaP <- gutenberg_download(1342)
View(PaP)
View(PaP)
PaP_tddf <- tibble(text=text)
PaP_tddf <- unnest_token(word, text)
PaP_tddf <- unnest_tokens(word, text)
PaP_tddf <- unnest_tokens(word, PaP$text)
PaP_mod <- PaP %>% unnest_tokens(word, text)
View(PaP_mod)
View(PaP_mod)
PaP_mod <- PaP_mod %>% anti_join(stop_words)
P <- "\\d+"
PaP_mod <- PaP_mod %>% anti_join(P)
str_detect(PaP_mod$words, P)
I <- str_detect(PaP_mod$words, P)
I <- str_detect(PaP_mod$word, P)
sum(I, rm.na=TRUE)
I
PaP_F <- PaP_mod[-I,]
View(PaP_F)
View(PaP_F)
PaP_F <- PaP_mod %>% str_replace_all(word, P, "")
PaP_F <- PaP_mod %>% str_replace_all(word, P, " ")
PaP_F <- PaP_mod %>% str_replace_all(word, P, ' ')
PaP_F <- PaP_mod %>% str_replace_all(word, P, '')
PaP_F <- PaP_mod[-I]
PaP_F <- PaP_mod[I]
PaP_mod %>% count(word, sort=TRUE)
WC <- PaP_mod %>% count(word, sort=TRUE)
View(WC)
View(WC)
length(filter(WC$n > 100))
length(filter(WC, n > 100))
filter(WC, n > 100)
length(filter(WC, n > 100))
length(WC)
str(WC)
rows(WC)
row(WC)
nrow(WC)
nrow(filter(WC, n > 100))
afinn <- get_sentiments("affin")
1
afinn <- get_sentiments("afinn")
1
install.packages("textdata")
afinn <- get_sentiments("afinn")
View(afinn)
View(afinn)
afinn_sentiments <- inner_join(afinn, PaP_mod)
View(afinn_sentiments)
View(afinn_sentiments)
afinn_sentiments <- afinn_sentiments %>% group_by(word) %>% summarize(word = word, N = n(), value=value)
AS <- afinn_sentiments %>% group_by(word) %>% summarize(word = word, N = n())
afinn_sentiments <- inner_join(afinn, PaP_mod)
AS <- afinn_sentiments %>% group_by(word) %>% summarize(word = word, N = n())
View(AS)
View(AS)
nrow(AS)
nrow(filter(afinn_sentiments, value>0))
nrow(filter(afinn_sentiments, value == 4))
nrow(filter(afinn_sentiments, value >= 0))
3414/6065
library(dplyr)
library(plyr)
library(readr)
library(stringr)
library(tidytext)
library(tidyverse)
library(ggplot2)
data(stop_words)
setwd("F:/Desk/Winter2021/WT-CivilWebsite/Report")
path <- getwd()
file <- "sCAN/total.txt"
dt_1_sCAN <- unname(sapply(file, readLines))
dt_1_sCAN <- as_tibble(dt_1_sCAN)
colnames(dt_1_sCAN) <- c("text")
dt_1_sCAN <- dt_1_sCAN %>% dplyr::mutate(linenumber = row_number())
dt_sCAN <- dt_1_sCAN %>% unnest_tokens(word, text)
dt_td_sCAN <- dt_sCAN %>% anti_join(stop_words)
dt_td_sCAN_c <- dt_td_sCAN %>% dplyr::count(word, sort = TRUE)
TD_sCAN <- dt_td_sCAN_c
WC <- as.numeric(TD_sCAN$n)
S<- sum(WC)
TD_sCAN <- TD_sCAN %>% mutate(per = (n/S)*100)
TD_sCAN_S_A <- TD_sCAN %>% inner_join(get_sentiments("afinn"))
TD_sCAN_S_B <- TD_sCAN %>% inner_join(get_sentiments("bing"))
write.csv(TD_sCAN, "sCAN_DA_WC.csv")
write.csv(TD_sCAN_S_A,"sCAN_DA_S_AFINN.csv")
write.csv(TD_sCAN_S_B,"sCAN_DA_S_BING.csv")
